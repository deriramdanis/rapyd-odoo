import modules.modules
import orm.models as models
import orm.exceptions as exceptions
import orm.tools as tools
from orm.pouchdb import db #Whoever criticize me about this doesn't know this is local db object not the server's
from ir.data import data, create_data

tools.exceptions = exceptions

models.setSchema()

#tools.configuration.client = True
tools.configuration.url = "http://localhost:8069"
tools.configuration.home_view = window.localStorage.rapyd_home_view or 'res.message.chat'
configuration = v'{"home_view":window.localStorage.rapyd_home_view||"res.message.chat"}'
configuration.client = tools.configuration.client
tools.configuration = Object.assign(tools.configuration, configuration)

#if not tools.configuration.client:
def restrict_menus():
    return models.env['res.users.menu'].search(['user_id', '=', models.env.user.id]).then(
    def (menu_ids):
        menus = [menu_id.menu for menu_id in menu_ids]
        if not menus.length: return
        for menu in tools.menu:
            if menu not in menus: del tools.menu[menu]
    )
data.push(restrict_menus)
tools.create_data = create_data

for key in tools.menu:
    if tools.exist(tools.menu[key].parent):
       if tools.menu[key].parent in tools.menu:
          tools.menu[tools.menu[key].parent].childs.push(tools.menu[key])
          tools.menu[tools.menu[key].parent].childs.sort(
          def (a, b):
              return a.sequence - b.sequence
          )
       del tools.menu[key]

window.models = models
window.tools = tools
window.local_db = db
