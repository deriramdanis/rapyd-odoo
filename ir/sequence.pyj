import orm.models as models
import orm.fields as fields
import orm.api as api
from ir.data import data

class IrSequence(models.Model):
    _name = 'ir.sequence'
    _rec_name = 'code'

    code = fields.Char(string="Code", required=True, index=True)
    sequence = fields.Integer(string="Sequence", defaults=0)

    @api.server
    def get_next(self, code):
        def next_sequence(sequence_id):
            return sequence_id.write({'sequence': sequence_id.sequence + 1}).then(
            def (sequence_id): return sequence_id.sequence
            )
        if not self.ids.length: return self.env['ir.sequence'].with_context(limit=1).search(['code', '=', code]).then(next_sequence)
        return next_sequence(self)

IrSequence()

def add_sequence(code, sequences):
    def create_sequence():
        return models.env['ir.sequence'].with_context(limit=1).search(['code', '=', code]).then(
        def (sequence_id):
            if not sequence_id.length:
               return models.env['ir.sequence'].create({'code': code}).then(
               def (sequence_id):
                   if sequences: sequences[sequence_id.code] = sequence_id.id
               )
            if sequences: sequences[sequence_id.code] = sequence_id.id
        )
    data.append(create_sequence)
