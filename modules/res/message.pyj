import orm.models as models
import orm.fields as fields
import orm.tools as tools
import orm.api as api
from ir.ui import menu, view
class ResMessage(models.Model):
    _name = 'res.message'

    name = fields.Char(string="Title", required=True)
    text = fields.Text(string="Text", required=True)
    sent = fields.Boolean(string="Sent")
    date = fields.Datetime(string="Date")
    sender_id = fields.Many2one('res.users', string="Sender")
    recipient_id = fields.Many2one('res.users', string="Recipient")

    @api.strict
    def send_message(self):
        self.sent = True
        if not self.date:
           self.date = Date()
        self.env['res.users'].browse(self.sender_id).then(
        def (result):
            if self.recipient_id:
               models.env.context.sockets[self.sender_id].emit('private-message', {'text': self.text, 'date': self.date, 'type': 'sent'})
               models.env.context.sockets[self.recipient_id].emit('private-message', {'name': result.name, 'text': self.text, 'date': self.date, 'type': 'received'})
               return self
            message = {'message': self.text, 'date': self.date}
            if result.length > 0:
               message['user'] = result.name
            else:
               message['user'] = 'Administrator'
            self.env.context.socket.emit('message', message)
        ).catch(
        def (result):
            self.env.context.socket.emit('message', {'message': self.text, 'date': self.date, 'user': 'Administrator'})
        )
        console.log(self.text)
        return self

ResMessage()

#menu.add({'id': 'settings_message', 'string': 'Messages', 'parent': 'settings', 'model': 'res.message', 'sequence': 10})

view.add({'model': 'res.message', 'mode': 'tree', 'string': False, 'arch': """
<tree>
    <field name="name"/>
</tree>
"""})

view.add({'model': 'res.message', 'mode': 'form', 'string': False, 'arch': """
<form>
    <header>
        <button name="send_message" string="Send"/>
    </header>
    <sheet>
        <group>
            <field name="name"/>
            <field name="sent"/>
        </group>
        <group>
            <field name="text"/>
        </group>
    </sheet>
</form>
"""})

def show_message(msg):

    #Calculate time
    d = Date(msg.date)
    s = d.getSeconds()
    m = d.getMinutes()
    h = d.getHours()
    if s < 10:
       s = '0' + s
    if m < 10:
       m = '0' + m
    if h < 10:
       h = '0' + h

    #Create new message
    listItem = window.$$('<li class="mdl-list__item mdl-list__item--three-line"></li>')
    mainSpan = window.$$('<span class="mdl-list__item-primary-content"></span>')
    icon = window.$$('<i class="material-icons mdl-list__item-avatar">&#xe7fd</i>')
    user = window.$$('<span></span>').text(msg.user)
    message = window.$$('<span class="mdl-list__item-text-body"></span>').text(msg.message + ' - ' + h + ':' + m + ':' + s)

    #Build the message html and append it to the correct room div
    mainSpan.append(icon)
    mainSpan.append(user)
    mainSpan.append(message)
    listItem.append(mainSpan)
    window.$$('.messages').append(listItem)

    #Scroll down
    #window.$$('.page-content').animate({scrollTop: window.$$('.chat-list-div').prop("scrollHeight")}, 500)
    #window.document.querySelector('.page-content').scrollBy(0, window.$$('.chat-list-div').prop('scrollHeight'))
    window.document.querySelector('.page-content').scrollTop = window.$$('.chat-list-div').prop('scrollHeight');

tools.show_message = show_message

def chat_init(page):
    preload = loadApp()
    models.env['res.message'].search(['recipient_id', '=', False]).then(
    def (message_ids):
        message_ids.queue(
           def (message_id, next):
               show_message({'user': 'Administrator', 'message': message_id.text, 'date': message_id.date})
               next()
        )
        doneApp(preload)
    ).catch(
    def (error): 
         console.log(error)
         doneApp()
    )

view.add({'model': 'res.message', 'mode': 'chat', 'string': False, 'init': chat_init, 'arch': """
          <div data-page="res.message.chat" class="page">
 
            <!-- Top Navbar. In Material theme it should be inside of the page-->
            <div class="navbar">
              <div class="navbar-inner">
                <div class="left">
                  <a href="#" data-panel="left" class="open-panel link icon-only">
                    <i class="icon icon-bars"></i>
                  </a>
                </div>
                <div class="center">Home</div>
                <!--<div class="right">
                  <a href="#" data-panel="left" class="open-panel link icon-only">
                    <i class="icon icon-bars"></i>
                  </a>
                </div>-->
              </div>
            </div>

  <a class="floating-button" onclick="loadPage(mainView, 'res.message.users');" href="#">
    <i class="material-icons mdl-list__item-avatar" style="background-color: transparent;">&#xe851</i>
  </a>

            <!-- Scrollable page content -->
            <div class="page-content" style="padding-top: 56px">
              
              <main>
                <div>

                    <section class="chat-area mdl-grid" style="padding-bottom: 196px">
                        <div class="mdl-cell mdl-cell--9-col" id="chat-cell">
                          <div class="chat-list-div">
                            <ul class="listborder mdl-list messages"></ul>
                          </div>
                        </div>
                        <!--<div class="user-card mdl-card mdl-shadow--2dp mdl-cell mdl-cell--2-col mdl-cell--1-offset mdl-cell--hide-phone mdl-cell--hide-tablet" style="margin: 0; min-width: 200px;">
                            <div class="mdl-card__title">
                                <h2 class="mdl-card__title-text">Users</h2>
                            </div>
                            <div class="user-list-div">
                                <ul class="listborder mdl-list" id="users">
                                </ul>
                            </div>

                        </div>-->
                    </section>

                    <section class="message-area mdl-grid">
                        <div class="mdl-cell mdl-cell--12-col">
                            <div class="message-card mdl-card mdl-grid mdl-shadow--2dp" style="min-width: 100%; position: fixed; left: 0; bottom: 0;">
                                <!--<div class="message-box mdl-cell mdl-cell--11-col">
                                    <form action="" id="send-message-form">
                                        <div class="message-field mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                                            <input class="mdl-textfield__input" autocomplete="off" type="text" id="send-message-form-input">
                                            <label class="mdl-textfield__label" for="send-message-form-input">Message</label>
                                        </div>
                                    </form>
                                </div>
                                <div class="send-button mdl-cell mdl-cell--1-col">
                                    <button id="send-message-button" class="mdl-button mdl-button--colored mdl-js-button mdl-button--raised mdl-js-ripple-effect">Send</button>
                                </div>-->
                                <div class="list-block">
                    <div class="item-content">
                      <div>
                        <div class="item-input">
                          <input type="text" placeholder="Message" id="homepage_chat_message">
                        </div>
                      </div>
                    </div>
                  </div>
                                <div class="item-content" style="margin-top: 40px; margin-left: 10px; margin-right: 100%;">
                    <div class="button button-fill button-raised" onclick="models.env['res.message'].create({'sender_id': models.env.user.id, 'text': getValue('homepage_chat_message'), 'name': 'Chat'}).then(function(result) {setValue('homepage_chat_message', ''); if (result.length > 0) result.send_message()})">Send</div>
                  </div>
                            </div>
                            
                        </div>
                    </section>
                </div>
              </main>
                
            </div>
          </div>
"""})

def users_init(page):
    preload = loadApp()
    element = """
        <div class="item-media"><i class="material-icons mdl-list__item-avatar">&#xe7fd</i></div>
        <div class="item-inner">
          <div class="item-title">{}</div>
        </div>
    """
    models.env['res.users'].search().then(
    def (user_ids):
        user_ids.queue(
           def (user_id, next):
                if user_id.id == models.env.user.id:
                   return next()
                li = document.createElement('li')
                div = document.createElement('div')
                div.className = 'item-content'
                div.onclick =
                def():
                     console.log(user_id)
                     models.env.context.active_id = user_id
                     loadPage(mainView, 'res.message.private')
                div.innerHTML += str.format(element, user_id.name)
                li.appendChild(div)
                document.querySelector('ul.message-users').appendChild(li)
                next()
        )
        doneApp(preload)
    ).catch(
    def (error): 
         console.log(error)
         doneApp(preload)
    )

view.add({'model': 'res.message', 'mode': 'users', 'string': False, 'init': users_init, 'arch': """
<div data-page="res.message.users" class="page">

            <!-- Top Navbar. In Material theme it should be inside of the page-->
            <div class="navbar">
              <div class="navbar-inner">
                <div class="left">
                  <a class="back link icon-only"><i class="icon icon-back"></i></a>
                </div>
                <div class="center">Users</div>
                <!--<div class="right">
                  <a href="#" data-panel="left" class="open-panel link icon-only">
                    <i class="icon icon-bars"></i>
                  </a>
                </div>-->
              </div>
            </div>
<div class="page-content" style="padding-top: 24px">

    <div class="list-block">
      <ul class="message-users">
      </ul>
    </div>

</div>
</div>
"""})

def private_init(page):
    preload = loadApp()
    messages = myApp.messages('.messages-container', {
    'autoLayout': True
    })
    user_ids = [models.env.user.id, models.env.context.active_id.id]
    #models.env['res.message'].search(['sender_id', '=', models.env.user.id], ['recipient_id', '=', models.env.context.active_id.id]).then(
    #def (message_ids):
    #     messages.addMessages([{'text': message.text, 'date': message.date, 'type': 'sent'} for message in message_ids.sort_by('date').values], 'append', False)
    #     next()
    #)
    #models.env['res.message'].search(['sender_id', '=', models.env.context.active_id.id], ['recipient_id', '=', models.env.user.id]).then(
    models.env['res.message'].search(['sender_id', 'in', user_ids], ['recipient_id', 'in', user_ids]).then(
    def (message_ids):
         window.recent_messages = []
         message_ids.sort_by('date').queue(
         def (message_id, next):
              return models.env['res.users'].with_context(no_preload=True).browse(message_id.sender_id).then(
              def (user_id):
                   window.recent_messages.push({'name': user_id.name, 'text': message_id.text, 'date': Date(message_id.date).toLocaleString(), 'type': 'received' if models.env.user.id != message_id.sender_id else 'sent'})
                   return next()
              )
         ).then(
         def ():
              messages.addMessages(window.recent_messages, 'append', False)
              doneApp(preload)
         )
    )

view.add({'model': 'res.message', 'mode': 'private', 'string': False, 'init': private_init, 'arch': """
<div data-page="res.message.private" class="page">

            <!-- Top Navbar. In Material theme it should be inside of the page-->
            <div class="navbar">
              <div class="navbar-inner">
                <div class="left">
                  <a class="back link icon-only"><i class="icon icon-back"></i></a>
                </div>
                <div class="center">Message</div>
                <!--<div class="right">
                  <a href="#" data-panel="left" class="open-panel link icon-only">
                    <i class="icon icon-bars"></i>
                  </a>
                </div>-->
              </div>
            </div>

  <div class="toolbar messagebar" style="background-color: #fff !important">
    <div class="toolbar-inner">
      <textarea placeholder="Message" id="private_text_message"></textarea><a href="#" class="link" onclick="models.env['res.message'].create({'sender_id': models.env.user.id, 'recipient_id': models.env.context.active_id.id, 'text': getValue('private_text_message'), 'name': 'Message'}).then(function(result) {setValue('private_text_message', ''); if (result.length > 0) result.send_message()})">Send</a>
    </div>
  </div>

<div class="page-content">

    <div class="messages-container" style="padding-bottom: 60px">
    </div>

</div>
</div>
"""})

if v"typeof window !== 'undefined'":
   interval = setInterval(
   def():
        if v"typeof user_socket === 'undefined'":
           return
        user_socket.on('private-message',
        def (message):
             message.date = Date(message.date).toLocaleString()
             container = document.querySelector('.messages-container')
             if container != None:
                container.f7Messages.addMessage(message)
        )
        clearInterval(interval)
   , 500)
