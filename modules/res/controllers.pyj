import orm.http as http
import orm.models as models
from ir.data import data

socket = require('socket.io')(http.server.server)
#socket.on('connection',
#def (socket):
#    console.log('A User Connected')
#    socket.on('disconnect',
#    def ():
#        console.log('User Disconnected')
#    )
#)

#active_users = {}
models.env.context.sockets = {}
models.env.context.socket = socket

def map_socket():
    models.env['res.users'].search().then(
    def (user_ids):
        for user_id in user_ids:
            user_socket = socket.of('/' + user_id.id)
            models.env.context.sockets[user_id.id] = user_socket
            user_socket.on('connection',
            def (socket):
                console.log('User ' + user_id.login + ' connected')
                #active_users[user_id.id] = user_id.login;
                socket.on('disconnect',
                def ():
                    console.log('User ' + user_id.login + ' disconnected')
                    #del active_users[user_id.id];
                )
            )
    )

data.append(map_socket)

#def emit(event, data):
#    for user in active_users:
#        models.env.context.sockets[user].emit(event, data)
#socket.emit = emit
